---
- name: Setting up workload for user
  debug:
    msg: "Setting up workload for user ocp_username = {{ ocp_username }}"

# Set up the combined dictionary for the workload
- name: Set up ocp_infra_aiedge combined dictionary
  set_fact:
    ocp_infra_aiedge: >-
      {{ ocp_infra_aiedge_defaults
       | combine(ocp_infra_aiedge_vars    | default( {} ),
                 ocp_infra_aiedge_secrets | default( {} ), recursive=true )
      }}


# Because now secrets are part of the combined dictionary use
# verbosity 2 to prevent printing the dictionary during every run.
- name: Print combined role variables
  debug:
    var: ocp_infra_aiedge
    verbosity: 2

####################################################################################################
# GIT REPO SETUP
####################################################################################################
- name: "Set the location directory where the repo will be saved: {{ ocp_infra_aiedge.manuela_dev_repo }}"
  tempfile:
    state: directory
    suffix: manuela
  register: manuela_root_dir

- set_fact:
    manuela_dev_repo_dir: "{{ manuela_root_dir.path }}/manuela-dev"
    manuela_gitops_repo_dir: "{{ manuela_root_dir.path }}/manuela-gitops"

# Clone the manuela dev & gitops repo and create a branch for the demo
- name: "Clone dev repo: {{ ocp_infra_aiedge.manuela_dev_repo }} @ {{ ocp_infra_aiedge.manuela_dev_repo_version }}"
  git:
    repo: "{{ ocp_infra_aiedge.manuela_dev_repo }}"
    version: "{{ ocp_infra_aiedge.manuela_dev_repo_version }}"
    dest: "{{ manuela_dev_repo_dir }}"

- name: "Clone gitops repo: {{ ocp_infra_aiedge.manuela_gitops_repo }} @ {{ ocp_infra_aiedge.manuela_gitops_repo_version }}"
  git:
    repo: "{{ ocp_infra_aiedge.manuela_gitops_repo }}"
    version: "{{ ocp_infra_aiedge.manuela_gitops_repo_version }}"
    dest: "{{ manuela_gitops_repo_dir }}"

- name: Set the git config user name
  git_config:
    name: user.name
    repo: "{{ item }}"
    scope: local
    value: "{{ ocp_infra_aiedge_defaults.git_config.user }}"
  loop:
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"

- name: Set the git config email
  git_config:
    name: user.email
    repo: "{{ item }}"
    scope: local
    value: "{{ ocp_infra_aiedge_defaults.git_config.email }}"
  loop:
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"

- name: "Create branch for running the demo"
  shell:
    chdir: "{{ item }}"
    cmd: "git checkout -b {{ ocp_infra_aiedge_defaults.manuela_gitops_repo_demo_branch }}"
  loop:
    - "{{ manuela_gitops_repo_dir }}"
    - "{{ manuela_dev_repo_dir }}"

- name: Get cluster ingress config
  k8s_info:
    api_version: config.openshift.io/v1
    kind: ingress
    name: cluster
  register: cluster_config_ingress

# Wildcard domain is the base domain for all project routes in the cluster
- set_fact:
    core_cluster_wildcard_domain: "{{ cluster_config_ingress.resources[0].spec.domain }}"

- name: "Replace all gitops repo url references with {{ ocp_infra_aiedge.manuela_dev_repo }}"
  replace: 
    path: "{{ manuela_gitops_repo_dir }}/{{ item }}"
    regexp: 'https:\/\/github\.com\/sa-mw-dach\/manuela-gitops.git'
    replace: "{{ ocp_infra_aiedge.manuela_gitops_repo }}"
  loop:
    - "meta/argocd-quickstart.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-line-dashboard-application.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-messaging-application.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-machine-sensor-application.yaml"

- name: "Commit changes to the application repoURLs"
  shell:
    chdir: "{{ manuela_gitops_repo_dir }}"
    cmd: "git add -u; git commit -m 'adapt repo URLs'"

- name: "Replace all gitops repo branch references with {{ ocp_infra_aiedge.manuela_dev_repo }}"
  replace: 
    path: "{{ manuela_gitops_repo_dir }}/{{ item }}"
    regexp: '(targetRevision:\s+).+$'
    replace: '\1{{ ocp_infra_aiedge.manuela_gitops_repo_demo_branch }}'
  loop:
    - "meta/argocd-quickstart.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-line-dashboard-application.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-messaging-application.yaml"
    - "config/instances/manuela-quickstart/manuela-quickstart-machine-sensor-application.yaml"

- name: "Commit changes to the application targetRevisions"
  shell:
    chdir: "{{ manuela_gitops_repo_dir }}"
    cmd: "git add -u; git commit -m 'adapt repo targetRevision'"

- name: "Replace all gitops wildcard domains with {{ core_cluster_wildcard_domain }}"
  replace: 
    path: "{{ manuela_gitops_repo_dir }}/config/instances/manuela-quickstart/{{ item }}"
    regexp: 'apps-crc\.testing'
    replace: "{{ core_cluster_wildcard_domain }}"
  loop:
    - line-dashboard/line-dashboard-configmap.yaml
    - line-dashboard/line-dashboard-route.yaml
    - machine-sensor/machine-sensor-1-configmap.properties
    - machine-sensor/machine-sensor-2-configmap.properties
    - messaging/route.yaml

- name: "Commit changes to the wildcard domain"
  shell:
    chdir: "{{ manuela_gitops_repo_dir }}"
    cmd: "git add -u; git commit -m 'adapt base DNS names'"

################################################################################
# ARGOCD
################################################################################
- name: Create manuela-dev namespaces and operators subscriptions
  shell:
    chdir: "{{ manuela_dev_repo_dir }}/namespaces_and_operator_subscriptions"
    cmd: "oc apply -k {{ item }}"
  loop:
    - "openshift-pipelines"
    - "manuela-ci"
    - "argocd"
    - "manuela-temp-amq"

- name: Wait for argocd pods to come online
  k8s_info:
    namespace: argocd
    api_version: v1
    kind: Pod
    label_selectors: "name=argocd-operator"
    field_selectors:
      - status.phase=Running
  register: argo_pod
  until: argo_pod.resources
  retries: 4
  delay: 30

- name: Create manuela-dev argocd
  shell:
    chdir: "{{ manuela_dev_repo_dir }}"
    cmd: "oc apply -k infrastructure/argocd"

- name: Grant service account argocd-application-controller cluster-admin privileges
  shell:
    cmd: "oc adm policy add-cluster-role-to-user cluster-admin -n argocd -z argocd-application-controller --rolebinding-name cluster-admin-manuela"

- name: Wait for argocd pods to come online
  k8s_info:
    namespace: argocd
    api_version: v1
    kind: Pod
    label_selectors: "{{ item }}"
    field_selectors:
      - status.phase=Running
  register: argo_pod
  until: argo_pod.resources
  retries: 4
  delay: 30
  loop:
    - "app.kubernetes.io/name=argocd-application-controller"
    - "app.kubernetes.io/name=argocd-dex-server"
    - "app.kubernetes.io/name=argocd-redis"
    - "app.kubernetes.io/name=argocd-repo-server"
    - "app.kubernetes.io/name=argocd-server"

- name: Create gitops deployment agent configuration for the quickstart environment
  k8s:
    state: present
    definition: "{{ lookup('file', manuela_gitops_repo_dir +'/meta/argocd-quickstart.yaml') | from_yaml_all | list }}"

- name: Query the argocd-server route
  k8s_info:
    namespace: argocd
    api_version: route.openshift.io/v1
    kind: Route
    name: argocd-server
  register: argocd_route_object

- set_fact:
    argocd_route_url: "https://{{ argocd_route_object.resources[0].spec.host }}"

- name: Create manuela-dev namespaces and operators subscriptions
  shell:
    chdir: "{{ manuela_dev_repo_dir }}"
    cmd: "oc delete -k namespaces_and_operator_subscriptions/manuela-temp-amq"

# Leave this as the last task in the playbook.
# --------------------------------------------
- name: workload tasks complete
  debug:
    msg: "Workload Tasks completed successfully."
  when: not silent|bool
